{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loftonj\\\\Desktop\\\\FEND\\\\newfrontend\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:3001/user/login', {\n        username,\n        password\n      });\n      const {\n        token\n      } = response.data;\n      const decoded = jwtDecode(token);\n      setUser(decoded);\n      localStorage.setItem('token', token);\n      setError(null); // Clear error on successful login\n    } catch (error) {\n      setError('Invalid credentials'); // Set error message for login failure\n      throw new Error('Invalid credentials');\n    }\n  };\n  const register = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:3001/user/register', {\n        username,\n        password\n      });\n      console.log(response.data);\n      setError(null); // Clear error on successful registration\n\n      // Automatically log in the user after successful registration\n      const loginResponse = await axios.post('http://localhost:3001/user/login', {\n        username,\n        password\n      });\n      const {\n        token\n      } = loginResponse.data;\n      const decoded = jwtDecode(token);\n      setUser(decoded);\n      localStorage.setItem('token', token);\n      return true; // Indicate success\n    } catch (error) {\n      if (error.response && error.response.data.message === 'Username already taken') {\n        setError('Username already taken'); // Set error message for duplicate username\n      } else {\n        setError('Registration failed'); // Set a generic error message for other failures\n      }\n      return false; // Indicate failure\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decoded = jwtDecode(token);\n      setUser(decoded);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      login,\n      register,\n      logout,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"FoT8xzvemVmWV60BhcL+ltjm2pQ=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","error","setError","login","username","password","response","post","token","data","decoded","localStorage","setItem","Error","register","console","log","loginResponse","message","logout","removeItem","getItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/loftonj/Desktop/FEND/newfrontend/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/user/login', {\r\n        username,\r\n        password,\r\n      });\r\n      const { token } = response.data;\r\n      const decoded = jwtDecode(token);\r\n      setUser(decoded);\r\n      localStorage.setItem('token', token);\r\n      setError(null); // Clear error on successful login\r\n    } catch (error) {\r\n      setError('Invalid credentials'); // Set error message for login failure\r\n      throw new Error('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  const register = async (username, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/user/register', {\r\n        username,\r\n        password,\r\n      });\r\n      console.log(response.data);\r\n      setError(null); // Clear error on successful registration\r\n\r\n      // Automatically log in the user after successful registration\r\n      const loginResponse = await axios.post('http://localhost:3001/user/login', {\r\n        username,\r\n        password,\r\n      });\r\n      const { token } = loginResponse.data;\r\n      const decoded = jwtDecode(token);\r\n      setUser(decoded);\r\n      localStorage.setItem('token', token);\r\n\r\n      return true; // Indicate success\r\n    } catch (error) {\r\n      if (error.response && error.response.data.message === 'Username already taken') {\r\n        setError('Username already taken'); // Set error message for duplicate username\r\n      } else {\r\n        setError('Registration failed'); // Set a generic error message for other failures\r\n      }\r\n      return false; // Indicate failure\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const decoded = jwtDecode(token);\r\n      setUser(decoded);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser, login, register, logout, error }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}