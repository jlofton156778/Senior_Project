{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loftonj\\\\Desktop\\\\FEND\\\\new frontend\\\\frontend\\\\src\\\\components\\\\pages\\\\User.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../context/AuthContext';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode'; // Correct import without destructuring\nimport './User.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const {\n    user,\n    setUser,\n    logout\n  } = useContext(AuthContext); // Include logout function from context\n  const [psnId, setPsnId] = useState((user === null || user === void 0 ? void 0 : user.psnId) || '');\n  const [steamId, setSteamId] = useState((user === null || user === void 0 ? void 0 : user.steamId) || '');\n  const [message, setMessage] = useState(''); // Message to display update status\n  const [loading, setLoading] = useState(false); // Loading state to indicate processing\n\n  // Function to handle both update and refresh\n  const updateIds = async (forceUpdate = false) => {\n    try {\n      let newToken = null;\n      let updatedFields = []; // Keep track of which fields were updated\n\n      if (forceUpdate || psnId !== user.psnId) {\n        // Update PSN ID on your server\n        const response = await axios.put('http://localhost:3001/user/update-psn-id', {\n          username: user.username,\n          psnId\n        });\n        console.log('PSN ID updated successfully:', response.data);\n        newToken = response.data.token; // Get new token\n        updatedFields.push('PSN ID'); // Record update\n\n        // Trigger PSN ID update\n        await axios.post(`http://localhost:3001/psn/update/${psnId}`);\n        console.log(`PSN data update triggered for: ${psnId}`);\n      }\n      if (forceUpdate || steamId !== user.steamId) {\n        // Update Steam ID on your server\n        const response = await axios.put('http://localhost:3001/user/update-steam-id', {\n          username: user.username,\n          steamId\n        });\n        console.log('Steam ID updated successfully:', response.data);\n        newToken = response.data.token; // Get new token\n        updatedFields.push('Steam ID'); // Record update\n\n        // Trigger Steam ID update\n        await axios.post(`http://localhost:3001/steam/update/${steamId}`);\n        console.log(`Steam data update triggered for: ${steamId}`);\n      }\n      if (newToken) {\n        const decoded = jwtDecode(newToken); // Decode new token to get user data\n        setUser(decoded); // Update user context with new data\n        localStorage.setItem('token', newToken); // Store new token\n      }\n\n      // Set message based on updates\n      if (updatedFields.length > 0) {\n        if (updatedFields.length === 2) {\n          setMessage('Both PSN ID and Steam ID updated successfully.');\n        } else {\n          setMessage(`${updatedFields[0]} updated successfully.`);\n        }\n      } else {\n        setMessage('No changes were made.');\n      }\n    } catch (error) {\n      console.error('Error updating IDs:', error);\n      setMessage('Error updating platform IDs');\n    } finally {\n      setLoading(false); // Set loading to false after processing\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true); // Set loading to true when submitting\n    await updateIds(); // Update IDs based on changes\n  };\n  const handleRefresh = async () => {\n    setLoading(true); // Set loading to true when refreshing\n    await updateIds(true); // Force update IDs regardless of changes\n  };\n  const handleLogout = () => {\n    logout(); // Call the logout function from the AuthContext\n  };\n  useEffect(() => {\n    setPsnId((user === null || user === void 0 ? void 0 : user.psnId) || '');\n    setSteamId((user === null || user === void 0 ? void 0 : user.steamId) || '');\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-container\",\n    children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manage Platform IDs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Updating...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }, this), \" \", message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"psnId\",\n            children: \"PSN ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"psnId\",\n            value: psnId,\n            onChange: e => setPsnId(e.target.value),\n            placeholder: \"Enter PSN ID\",\n            disabled: loading // Disable input when loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"steamId\",\n            children: \"Steam ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"steamId\",\n            value: steamId,\n            onChange: e => setSteamId(e.target.value),\n            placeholder: \"Enter Steam ID\",\n            disabled: loading // Disable input when loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: \"Update IDs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRefresh,\n            className: \"refresh-button\",\n            disabled: loading,\n            children: \"Refresh User Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please register or log in to manage your platform IDs.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        className: \"link-button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"link-button\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(User, \"a1je+nzA82cKRQsM5RimAwVKKpw=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Link","AuthContext","axios","jwtDecode","jsxDEV","_jsxDEV","User","_s","user","setUser","logout","psnId","setPsnId","steamId","setSteamId","message","setMessage","loading","setLoading","updateIds","forceUpdate","newToken","updatedFields","response","put","username","console","log","data","token","push","post","decoded","localStorage","setItem","length","error","handleSubmit","e","preventDefault","handleRefresh","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","disabled","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/loftonj/Desktop/FEND/new frontend/frontend/src/components/pages/User.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from '../../context/AuthContext';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode';  // Correct import without destructuring\r\nimport './User.css'; // Import the CSS file\r\n\r\nconst User = () => {\r\n  const { user, setUser, logout } = useContext(AuthContext); // Include logout function from context\r\n  const [psnId, setPsnId] = useState(user?.psnId || '');\r\n  const [steamId, setSteamId] = useState(user?.steamId || '');\r\n  const [message, setMessage] = useState(''); // Message to display update status\r\n  const [loading, setLoading] = useState(false); // Loading state to indicate processing\r\n\r\n  // Function to handle both update and refresh\r\n  const updateIds = async (forceUpdate = false) => {\r\n    try {\r\n      let newToken = null;\r\n      let updatedFields = []; // Keep track of which fields were updated\r\n\r\n      if (forceUpdate || psnId !== user.psnId) {\r\n        // Update PSN ID on your server\r\n        const response = await axios.put('http://localhost:3001/user/update-psn-id', {\r\n          username: user.username,\r\n          psnId,\r\n        });\r\n        console.log('PSN ID updated successfully:', response.data);\r\n        newToken = response.data.token; // Get new token\r\n        updatedFields.push('PSN ID'); // Record update\r\n\r\n        // Trigger PSN ID update\r\n        await axios.post(`http://localhost:3001/psn/update/${psnId}`);\r\n        console.log(`PSN data update triggered for: ${psnId}`);\r\n      }\r\n\r\n      if (forceUpdate || steamId !== user.steamId) {\r\n        // Update Steam ID on your server\r\n        const response = await axios.put('http://localhost:3001/user/update-steam-id', {\r\n          username: user.username,\r\n          steamId,\r\n        });\r\n        console.log('Steam ID updated successfully:', response.data);\r\n        newToken = response.data.token; // Get new token\r\n        updatedFields.push('Steam ID'); // Record update\r\n\r\n        // Trigger Steam ID update\r\n        await axios.post(`http://localhost:3001/steam/update/${steamId}`);\r\n        console.log(`Steam data update triggered for: ${steamId}`);\r\n      }\r\n\r\n      if (newToken) {\r\n        const decoded = jwtDecode(newToken); // Decode new token to get user data\r\n        setUser(decoded); // Update user context with new data\r\n        localStorage.setItem('token', newToken); // Store new token\r\n      }\r\n\r\n      // Set message based on updates\r\n      if (updatedFields.length > 0) {\r\n        if (updatedFields.length === 2) {\r\n          setMessage('Both PSN ID and Steam ID updated successfully.');\r\n        } else {\r\n          setMessage(`${updatedFields[0]} updated successfully.`);\r\n        }\r\n      } else {\r\n        setMessage('No changes were made.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating IDs:', error);\r\n      setMessage('Error updating platform IDs');\r\n    } finally {\r\n      setLoading(false); // Set loading to false after processing\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Set loading to true when submitting\r\n    await updateIds(); // Update IDs based on changes\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setLoading(true); // Set loading to true when refreshing\r\n    await updateIds(true); // Force update IDs regardless of changes\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout(); // Call the logout function from the AuthContext\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPsnId(user?.psnId || '');\r\n    setSteamId(user?.steamId || '');\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"user-container\">\r\n      {user ? (\r\n        <div className=\"user-form\">\r\n          <h1>Manage Platform IDs</h1>\r\n          {loading && <p className=\"loading\">Updating...</p>} {/* Display loading message */}\r\n          {message && <p className=\"message\">{message}</p>} {/* Display message to user */}\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <label htmlFor=\"psnId\">PSN ID:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"psnId\"\r\n                value={psnId}\r\n                onChange={(e) => setPsnId(e.target.value)}\r\n                placeholder=\"Enter PSN ID\"\r\n                disabled={loading} // Disable input when loading\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"steamId\">Steam ID:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"steamId\"\r\n                value={steamId}\r\n                onChange={(e) => setSteamId(e.target.value)}\r\n                placeholder=\"Enter Steam ID\"\r\n                disabled={loading} // Disable input when loading\r\n              />\r\n            </div>\r\n            <div className=\"button-group\"> {/* Button group for flexbox layout */}\r\n              <button type=\"submit\" disabled={loading}>Update IDs</button>\r\n              <button onClick={handleRefresh} className=\"refresh-button\" disabled={loading}>\r\n                Refresh User Data\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <button onClick={handleLogout} className=\"logout-button\">\r\n            Logout\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"user-form\">\r\n          <h1>Welcome</h1>\r\n          <p>Please register or log in to manage your platform IDs.</p>\r\n          <Link to=\"/register\" className=\"link-button\">Register</Link>\r\n          <Link to=\"/login\" className=\"link-button\">Log In</Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}