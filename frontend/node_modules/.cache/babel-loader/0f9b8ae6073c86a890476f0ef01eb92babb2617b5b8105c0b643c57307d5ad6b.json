{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loftonj\\\\Desktop\\\\FEND\\\\new frontend\\\\frontend\\\\src\\\\components\\\\pages\\\\SteamLogIn.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SteamLogin = () => {\n  _s();\n  const location = useLocation();\n  const {\n    achievements\n  } = location.state || {\n    achievements: []\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"steamloginh1\",\n      children: \"Steam Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"steamloginh2\",\n      children: \"Steam games listed below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: achievements.map(userAchievement => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"steam-game-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"steamloginh3\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: userAchievement.imageUrl,\n            alt: userAchievement.gameName,\n            className: \"steamgameImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/steamgame/${userAchievement._id}`,\n              state: {\n                achievements: userAchievement.achievements\n              } // Pass trophies data\n            },\n            children: userAchievement.gameName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), userAchievement.achievements && userAchievement.achievements.length > 0 ? userAchievement.achievements.filter(achievement => achievement.achieved) // Filter to show only achieved achievements\n        .map(achievement => /*#__PURE__*/_jsxDEV(\"div\", {}, achievement.apiname, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No achievements found for this app.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, userAchievement._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(SteamLogin, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = SteamLogin;\nexport default SteamLogin;\nvar _c;\n$RefreshReg$(_c, \"SteamLogin\");","map":{"version":3,"names":["React","useLocation","Link","jsxDEV","_jsxDEV","SteamLogin","_s","location","achievements","state","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","userAchievement","src","imageUrl","alt","gameName","to","pathname","_id","length","filter","achievement","achieved","apiname","_c","$RefreshReg$"],"sources":["C:/Users/loftonj/Desktop/FEND/new frontend/frontend/src/components/pages/SteamLogIn.js"],"sourcesContent":["import React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nconst SteamLogin = () => {\r\n  const location = useLocation();\r\n  const { achievements } = location.state || { achievements: [] };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='steamloginh1'>Steam Login Page</h1>\r\n      <h2 className='steamloginh2'>Steam games listed below:</h2>\r\n      <div>\r\n        {achievements.map((userAchievement) => (\r\n          <div key={userAchievement._id} className=\"steam-game-item\">\r\n            \r\n            <h3 className='steamloginh3'>\r\n            <img src={userAchievement.imageUrl} alt={userAchievement.gameName} className='steamgameImage'/>\r\n            <Link to={{\r\n                  pathname: `/steamgame/${userAchievement._id}`,\r\n                  state: { achievements: userAchievement.achievements } // Pass trophies data\r\n                }}\r\n              >\r\n                {userAchievement.gameName}\r\n              </Link>\r\n            </h3>\r\n            {userAchievement.achievements && userAchievement.achievements.length > 0 ? (\r\n              userAchievement.achievements\r\n                .filter((achievement) => achievement.achieved) // Filter to show only achieved achievements\r\n                .map((achievement) => (\r\n                  <div key={achievement.apiname}>\r\n                  </div>\r\n                ))\r\n            ) : (\r\n              <p>No achievements found for this app.</p>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SteamLogin;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO;EAAa,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI;IAAED,YAAY,EAAE;EAAG,CAAC;EAG/D,oBACEJ,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAIO,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDX,OAAA;MAAIO,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3DX,OAAA;MAAAM,QAAA,EACGF,YAAY,CAACQ,GAAG,CAAEC,eAAe,iBAChCb,OAAA;QAA+BO,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAExDN,OAAA;UAAIO,SAAS,EAAC,cAAc;UAAAD,QAAA,gBAC5BN,OAAA;YAAKc,GAAG,EAAED,eAAe,CAACE,QAAS;YAACC,GAAG,EAAEH,eAAe,CAACI,QAAS;YAACV,SAAS,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC/FX,OAAA,CAACF,IAAI;YAACoB,EAAE,EAAE;cACJC,QAAQ,EAAE,cAAcN,eAAe,CAACO,GAAG,EAAE;cAC7Cf,KAAK,EAAE;gBAAED,YAAY,EAAES,eAAe,CAACT;cAAa,CAAC,CAAC;YACxD,CAAE;YAAAE,QAAA,EAEDO,eAAe,CAACI;UAAQ;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACJE,eAAe,CAACT,YAAY,IAAIS,eAAe,CAACT,YAAY,CAACiB,MAAM,GAAG,CAAC,GACtER,eAAe,CAACT,YAAY,CACzBkB,MAAM,CAAEC,WAAW,IAAKA,WAAW,CAACC,QAAQ,CAAC,CAAC;QAAA,CAC9CZ,GAAG,CAAEW,WAAW,iBACfvB,OAAA,YAAUuB,WAAW,CAACE,OAAO;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CACN,CAAC,gBAEJX,OAAA;UAAAM,QAAA,EAAG;QAAmC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC1C;MAAA,GArBOE,eAAe,CAACO,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBxB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CAtCID,UAAU;EAAA,QACGJ,WAAW;AAAA;AAAA6B,EAAA,GADxBzB,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}