{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loftonj\\\\Desktop\\\\FEND\\\\new frontend\\\\frontend\\\\src\\\\components\\\\pages\\\\PlaystationLogIn.js\",\n  _s = $RefreshSig$();\n// Playstation.js\nimport { useLocation, Link } from 'react-router-dom';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaystationLogin = () => {\n  _s();\n  const location = useLocation();\n  const {\n    trophies\n  } = location.state || {\n    trophies: []\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"playstationloginh1\",\n      children: \"Playstation Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"playstationloginh2\",\n      children: \"Playstation Games are Listed Below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: trophies.map(userTrophy => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"psn-game-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"playstationloginh3\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: userTrophy.imageUrl,\n            alt: userTrophy.gameName,\n            className: \"psngameImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: `/game/${userTrophy._id}`,\n              state: {\n                trophies: userTrophy.trophies\n              } // Pass trophies data\n            },\n            children: [userTrophy.gameName, \" (Platform: \", userTrophy.platform, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), userTrophy.trophies && userTrophy.trophies.length > 0 ? userTrophy.trophies.filter(trophy => trophy.earned) // Filter to show only earned trophies\n        .map(trophy => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 20\n          }, this)\n        }, trophy._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No trophies found for this game.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, userTrophy._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaystationLogin, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = PlaystationLogin;\nexport default PlaystationLogin;\nvar _c;\n$RefreshReg$(_c, \"PlaystationLogin\");","map":{"version":3,"names":["useLocation","Link","React","jsxDEV","_jsxDEV","PlaystationLogin","_s","location","trophies","state","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","userTrophy","src","imageUrl","alt","gameName","to","pathname","_id","platform","length","filter","trophy","earned","_c","$RefreshReg$"],"sources":["C:/Users/loftonj/Desktop/FEND/new frontend/frontend/src/components/pages/PlaystationLogIn.js"],"sourcesContent":["// Playstation.js\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport React from 'react';\r\n\r\n\r\nconst PlaystationLogin = () => {\r\n  const location = useLocation();\r\n  const { trophies } = location.state || { trophies: [] };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='playstationloginh1'>Playstation Login Page</h1>\r\n      <h2 className='playstationloginh2'>Playstation Games are Listed Below:</h2>\r\n      <div>\r\n        {trophies.map((userTrophy) => (\r\n          <div key={userTrophy._id} className=\"psn-game-item\">\r\n\r\n            <h3 className='playstationloginh3'>\r\n            <img src={userTrophy.imageUrl} alt={userTrophy.gameName} className='psngameImage'/>\r\n            <Link to={{\r\n                  pathname: `/game/${userTrophy._id}`,\r\n                  state: { trophies: userTrophy.trophies } // Pass trophies data\r\n                }}\r\n              >\r\n                {userTrophy.gameName} (Platform: {userTrophy.platform})\r\n              </Link>  \r\n            </h3>\r\n            {userTrophy.trophies && userTrophy.trophies.length > 0 ? (\r\n              userTrophy.trophies\r\n                .filter((trophy) => trophy.earned) // Filter to show only earned trophies\r\n                .map((trophy) => (\r\n                  <div key={trophy._id}> \r\n                   <h4>\r\n                    </h4>\r\n\r\n                  </div>\r\n                ))\r\n            ) : (\r\n              <p>No trophies found for this game.</p>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaystationLogin;\r\n"],"mappings":";;AAAA;AACA,SAASA,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAS,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI;IAAED,QAAQ,EAAE;EAAG,CAAC;EAEvD,oBACEJ,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAIO,SAAS,EAAC,oBAAoB;MAAAD,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9DX,OAAA;MAAIO,SAAS,EAAC,oBAAoB;MAAAD,QAAA,EAAC;IAAmC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3EX,OAAA;MAAAM,QAAA,EACGF,QAAQ,CAACQ,GAAG,CAAEC,UAAU,iBACvBb,OAAA;QAA0BO,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAEjDN,OAAA;UAAIO,SAAS,EAAC,oBAAoB;UAAAD,QAAA,gBAClCN,OAAA;YAAKc,GAAG,EAAED,UAAU,CAACE,QAAS;YAACC,GAAG,EAAEH,UAAU,CAACI,QAAS;YAACV,SAAS,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACnFX,OAAA,CAACH,IAAI;YAACqB,EAAE,EAAE;cACJC,QAAQ,EAAE,SAASN,UAAU,CAACO,GAAG,EAAE;cACnCf,KAAK,EAAE;gBAAED,QAAQ,EAAES,UAAU,CAACT;cAAS,CAAC,CAAC;YAC3C,CAAE;YAAAE,QAAA,GAEDO,UAAU,CAACI,QAAQ,EAAC,cAAY,EAACJ,UAAU,CAACQ,QAAQ,EAAC,GACxD;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACJE,UAAU,CAACT,QAAQ,IAAIS,UAAU,CAACT,QAAQ,CAACkB,MAAM,GAAG,CAAC,GACpDT,UAAU,CAACT,QAAQ,CAChBmB,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,MAAM,CAAC,CAAC;QAAA,CAClCb,GAAG,CAAEY,MAAM,iBACVxB,OAAA;UAAAM,QAAA,eACCN,OAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC,GAFGa,MAAM,CAACJ,GAAG;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIf,CACN,CAAC,gBAEJX,OAAA;UAAAM,QAAA,EAAG;QAAgC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACvC;MAAA,GAxBOE,UAAU,CAACO,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAyBnB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CAxCID,gBAAgB;EAAA,QACHL,WAAW;AAAA;AAAA8B,EAAA,GADxBzB,gBAAgB;AA0CtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}